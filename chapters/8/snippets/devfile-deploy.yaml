commands:
- exec:
    commandLine: go build main.go
    component: runtime
    env:
    - name: GOPATH
      value: ${PROJECT_SOURCE}/.go
    - name: GOCACHE
      value: ${PROJECT_SOURCE}/.cache
    group:
      isDefault: true
      kind: build
    workingDir: ${PROJECT_SOURCE}
  id: build
- exec:
    commandLine: ./main
    component: runtime
    group:
      isDefault: true
      kind: run
    workingDir: ${PROJECT_SOURCE}
  id: run
- exec:
    commandLine: |
      dlv \
        --listen=127.0.0.1:${DEBUG_PORT} \
        --only-same-user=false \
        --headless=true \
        --api-version=2 \
        --accept-multiclient \
        debug --continue main.go
    component: runtime
    env:
    - name: GOPATH
      value: ${PROJECT_SOURCE}/.go
    - name: GOCACHE
      value: ${PROJECT_SOURCE}/.cache
    group:
      isDefault: true
      kind: debug
    workingDir: ${PROJECT_SOURCE}
  id: debug
# This is the main "composite" command that will run all below commands 
- id: deploy 
  composite: 
    commands: 
    - build-image 
    - k8s-deployment 
    - k8s-service 
    - k8s-url 
    group: 
      isDefault: true 
      kind: deploy 
# Below are the commands and their respective components that they are "linked" to deploy 
- id: build-image 
  apply: 
    component: outerloop-build 
- id: k8s-deployment 
  apply: 
    component: outerloop-deployment 
- id: k8s-service 
  apply: 
    component: outerloop-service 
- id: k8s-url 
  apply: 
    component: outerloop-url 
components:
- container:
    args:
    - tail
    - -f
    - /dev/null
    endpoints:
    - name: port-8080-tcp
      protocol: tcp
      targetPort: 8080
    - exposure: none
      name: debug
      targetPort: 5858
    env:
    - name: DEBUG_PORT
      value: "5858"
    image: registry.access.redhat.com/ubi9/go-toolset:1.19.13-4.1697647145
    memoryLimit: 1024Mi
    mountSources: true
  name: runtime
# This will build the container image before deployment 
- name: outerloop-build 
  image: 
    dockerfile: 
      buildContext: ${PROJECT_SOURCE} 
      rootRequired: false 
      uri: ./Dockerfile 
    imageName: "{{IMAGE_NAME}}" 
    # imageName: "{{APP_NAME}}" 
# This will create a Deployment in order to run your container image across 
# the cluster. 
- name: outerloop-deployment 
  kubernetes: 
    inlined: | 
      kind: Deployment 
      apiVersion: apps/v1 
      metadata: 
        name: {{APP_NAME}} 
      spec: 
        replicas: 1 
        selector: 
          matchLabels: 
            app: {{APP_NAME}} 
        template: 
          metadata: 
            labels: 
              app: {{APP_NAME}} 
          spec: 
            containers: 
              - name: {{APP_NAME}} 
                image: {{IMAGE_NAME}} 
                ports: 
                  - name: http 
                    containerPort: {{CONTAINER_PORT}} 
                    protocol: TCP 
                resources: 
                  limits: 
                    memory: "1024Mi" 
                    cpu: "500m" 
# This will create a Service so your Deployment is accessible. 
# Depending on your cluster, you may modify this code so it's a 
# NodePort, ClusterIP or a LoadBalancer service. 
- name: outerloop-service 
  kubernetes: 
    inlined: | 
      apiVersion: v1 
      kind: Service 
      metadata: 
        name: {{APP_NAME}} 
      spec: 
        ports: 
        - name: "{{CONTAINER_PORT}}" 
          port: {{CONTAINER_PORT}} 
          protocol: TCP 
          targetPort: {{CONTAINER_PORT}} 
        selector: 
          app: {{APP_NAME}} 
        type: NodePort 
- name: outerloop-url 
  kubernetes: 
    inlined: | 
      apiVersion: route.openshift.io/v1 
      kind: Route 
      metadata: 
        name: {{APP_NAME}} 
      spec: 
        path: / 
        to: 
          kind: Service 
          name: {{APP_NAME}} 
        port: 
          targetPort: {{CONTAINER_PORT}} 
metadata:
  description: Go (version 1.19.x) is an open source programming language that makes
    it easy to build simple, reliable, and efficient software.
  displayName: Go Runtime
  icon: https://raw.githubusercontent.com/devfile-samples/devfile-stack-icons/main/golang.svg
  language: Go
  name: my-awesome-app-01
  projectType: Go
  provider: Red Hat
  tags:
  - Go
  version: 1.2.1
schemaVersion: 2.2.0
starterProjects:
- description: A Go project with a simple HTTP server
  git:
    checkoutFrom:
      revision: main
    remotes:
      origin: https://github.com/devfile-samples/devfile-stack-go.git
  name: go-starter
# Here you define variables 
variables: 
 APP_NAME: my-awesome-app-01 
# ensure you update the following line accordingly: 
 IMAGE_NAME: quay.io/a13x22/my-awesome-app-01  
 CONTAINER_PORT: "8080" 
